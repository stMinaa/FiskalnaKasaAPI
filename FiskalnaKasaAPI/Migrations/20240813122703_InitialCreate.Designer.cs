// <auto-generated />
using System;
using System.Collections.Generic;
using FiskalnaKasaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FiskalnaKasaAPI.Migrations
{
    [DbContext(typeof(KasaContext))]
    [Migration("20240813122703_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<string>>("Adresses")
                        .HasColumnType("text[]");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PIB")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CustomerType")
                        .HasColumnType("boolean");

                    b.Property<string>("JMBG")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PIB")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BrojacRacuna")
                        .HasColumnType("text");

                    b.Property<string>("ESIR")
                        .HasColumnType("text");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PFR")
                        .HasColumnType("integer");

                    b.Property<int?>("PFRTime")
                        .HasColumnType("integer");

                    b.Property<int[]>("PaymentType")
                        .HasColumnType("integer[]");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("integer");

                    b.Property<int?>("PriceListId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PriceListId");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.PriceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateEnd")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateStart")
                        .HasColumnType("date");

                    b.Property<int>("DeparmentId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("PDVDateEnd")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PDVDateStart")
                        .HasColumnType("date");

                    b.Property<int>("PDVPercent")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeparmentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("PriceLists");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ServiceName")
                        .HasColumnType("text");

                    b.Property<string>("ServiceNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Invoice", b =>
                {
                    b.HasOne("FiskalnaKasaAPI.Models.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.InvoiceItem", b =>
                {
                    b.HasOne("FiskalnaKasaAPI.Models.Customer", "Customer")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiskalnaKasaAPI.Models.Invoice", "Invoice")
                        .WithMany("PatientServices")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("FiskalnaKasaAPI.Models.PriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListId");

                    b.Navigation("Customer");

                    b.Navigation("Invoice");

                    b.Navigation("PriceList");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.PriceList", b =>
                {
                    b.HasOne("FiskalnaKasaAPI.Models.Department", "Deparment")
                        .WithMany("ServiceList")
                        .HasForeignKey("DeparmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FiskalnaKasaAPI.Models.Service", "Service")
                        .WithMany("DepartmentList")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deparment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.User", b =>
                {
                    b.HasOne("FiskalnaKasaAPI.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Company", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Customer", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Department", b =>
                {
                    b.Navigation("ServiceList");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Invoice", b =>
                {
                    b.Navigation("PatientServices");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.Service", b =>
                {
                    b.Navigation("DepartmentList");
                });

            modelBuilder.Entity("FiskalnaKasaAPI.Models.User", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
